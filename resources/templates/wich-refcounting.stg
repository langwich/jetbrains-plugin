import "wich.stg"

File(f, functions, main, decls) ::= <<
#include \<stdio.h>
#include "wich.h"
#include "refcounting.h"

<functions:funcDecl()>
<functions>
<main>
>>

MainFunc(f,returnType,args,body) ::= <<
int main(int ____c, char *____v[])
{
	setup_error_handlers();
    ENTER();
	<body>
    EXIT();
	return 0;
}
<\n>
>>

Func(f,returnType,args,body)::=<<
<returnType> <f.name>(<args;separator=",">)
{
    ENTER();
    <body>
    EXIT();
}
<\n>
>>

BlockStatement(b,block) ::= <<
{
	MARK();
    <block>
    RELEASE();
}
>>

ReturnStat(r,expr,returnType)   ::= "{EXIT(); return <expr>;}"
ReturnHeapVarStat(r,expr)       ::= "{REF((void *)<expr>); EXIT(); DEC((void *)<expr>); return <expr>;}"
ReturnVectorHeapVarStat(r,expr,returnType) ::= "{REF((void *)<expr>.vector); EXIT(); DEC((void *)<expr>.vector); return <expr>;}"

StringVarDefStat(v,type)     ::= "STRING(<v.name>);"
VectorVarDefStat(v,type)     ::= "VECTOR(<v.name>);"

RefCountREF(r,varRef)   	 ::= "REF((void *)<varRef>);"
RefCountREFVector(r,varRef)	 ::= "REF((void *)<varRef>.vector);"
RefCountDEREF(d,varRef)      ::= "DEREF((void *)<varRef>);"
RefCountDEREFVector(d,varRef)::= "DEREF((void *)<varRef>.vector);"
RefCountROOT(r,varRef)	     ::= "_heapvar((heap_object **)&<varRef>)"
